// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS1_Teretana.EF;

namespace RS1_Teretana.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200212015714_Modifikacija_Kupon")]
    partial class Modifikacija_Kupon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Clan", b =>
                {
                    b.Property<int>("ClanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumUclanjivanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NalogID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClanID");

                    b.HasIndex("NalogID");

                    b.ToTable("Clan");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Drzava", b =>
                {
                    b.Property<int>("DrzavaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaID");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Izvjestaj", b =>
                {
                    b.Property<int>("IzvjestajID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IzvjestajID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Izvjestaj");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.KomentarTeretane", b =>
                {
                    b.Property<int>("KomentarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.HasKey("KomentarID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("KomentarTeretane");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnickiNalogID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeretanaID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikID");

                    b.HasIndex("KorisnickiNalogID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("UlogaID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Licenca", b =>
                {
                    b.Property<int>("LicencaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicencaID");

                    b.ToTable("Licenca");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Obavijest", b =>
                {
                    b.Property<int>("ObavijestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.HasKey("ObavijestID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.OcjenaTeretane", b =>
                {
                    b.Property<int>("OcjenaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.HasKey("OcjenaID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("OcjenaTeretane");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.PlacanjeClanarine", b =>
                {
                    b.Property<int>("PlacanjeClanarineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojRacuna")
                        .HasColumnType("int");

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<double>("Popust")
                        .HasColumnType("float");

                    b.Property<int?>("TeretanaID")
                        .HasColumnType("int");

                    b.Property<int>("TipClanarineID")
                        .HasColumnType("int");

                    b.Property<double>("UkupanIznos")
                        .HasColumnType("float");

                    b.HasKey("PlacanjeClanarineID");

                    b.HasIndex("ClanID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("TipClanarineID");

                    b.ToTable("PlacanjeClanarine");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Teretana", b =>
                {
                    b.Property<int>("TeretanaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("KrajRadnoVrijeme")
                        .HasColumnType("time");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("PocetakRadnoVrijeme")
                        .HasColumnType("time");

                    b.HasKey("TeretanaID");

                    b.HasIndex("GradID");

                    b.ToTable("Teretana");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.TipClanarine", b =>
                {
                    b.Property<int>("TipClanarineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipClanarineID");

                    b.ToTable("TipClanarine");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trener", b =>
                {
                    b.Property<int>("TrenerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NalogID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrenerID");

                    b.HasIndex("NalogID");

                    b.ToTable("Trener");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Uloga", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.AutorizacijskiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnickiNalogId")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickiNalogId");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.ChatClanovi", b =>
                {
                    b.Property<int>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poruka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChatID");

                    b.ToTable("ChatClanovi");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.ClanObavijest", b =>
                {
                    b.Property<int>("ClanObavijestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<int>("ObavijestID")
                        .HasColumnType("int");

                    b.Property<bool>("Procitana")
                        .HasColumnType("bit");

                    b.HasKey("ClanObavijestID");

                    b.HasIndex("ClanID");

                    b.HasIndex("ObavijestID");

                    b.ToTable("ClanObavijest");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.ClanTeretana", b =>
                {
                    b.Property<int>("ClanTeretanaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumUclanjivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.HasKey("ClanTeretanaID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("ClanTeretana");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.KorisnickiNalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipNalogaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipNalogaID");

                    b.ToTable("KorisnickiNalog");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.PopustKupon", b =>
                {
                    b.Property<int>("PopustKuponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<int>("Broj_Koristenja")
                        .HasColumnType("int");

                    b.Property<int>("Brojac_Koristenja")
                        .HasColumnType("int");

                    b.Property<DateTime>("KrajDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("KuponKod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PocetakDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Postotak")
                        .HasColumnType("int");

                    b.Property<int>("TeretanaId")
                        .HasColumnType("int");

                    b.HasKey("PopustKuponId");

                    b.HasIndex("TeretanaId");

                    b.ToTable("PopustKupon");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.PorukeClanova", b =>
                {
                    b.Property<int>("PorukeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<string>("Odgovor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PorukeID");

                    b.HasIndex("ClanID");

                    b.ToTable("PorukeClanova");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TipNaloga", b =>
                {
                    b.Property<int>("TipNalogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipNalogaID");

                    b.ToTable("TipNaloga");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TrenerLicenca", b =>
                {
                    b.Property<int>("TrenerLicencaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPolaganja")
                        .HasColumnType("datetime2");

                    b.Property<int>("LicencaId")
                        .HasColumnType("int");

                    b.Property<int>("TrenerId")
                        .HasColumnType("int");

                    b.HasKey("TrenerLicencaId");

                    b.HasIndex("LicencaId");

                    b.HasIndex("TrenerId");

                    b.ToTable("TrenerLicenca");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TreningZahtjev", b =>
                {
                    b.Property<int>("TreningZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanId")
                        .HasColumnType("int");

                    b.Property<bool>("Odobren")
                        .HasColumnType("bit");

                    b.Property<int>("TreninziId")
                        .HasColumnType("int");

                    b.HasKey("TreningZahtjevId");

                    b.HasIndex("ClanId");

                    b.HasIndex("TreninziId");

                    b.ToTable("TreningZahtjev");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.Treninzi", b =>
                {
                    b.Property<int>("TreninziID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojRezervacija")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("KrajTreninga")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("PocetakTreninga")
                        .HasColumnType("time");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.Property<int>("TrenerID")
                        .HasColumnType("int");

                    b.HasKey("TreninziID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("TrenerID");

                    b.ToTable("Treninzi");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TreninziDetalji", b =>
                {
                    b.Property<int>("TreninziDetaljiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<bool>("Otkazan")
                        .HasColumnType("bit");

                    b.Property<int>("TreninziID")
                        .HasColumnType("int");

                    b.HasKey("TreninziDetaljiID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TreninziID");

                    b.ToTable("treninziDetalji");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.Uclanjivanje", b =>
                {
                    b.Property<int>("UclanjivanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID")
                        .HasColumnType("int");

                    b.Property<int>("TeretanaID")
                        .HasColumnType("int");

                    b.HasKey("UclanjivanjeID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("Uclanjivanje");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Clan", b =>
                {
                    b.HasOne("RS1_WebApp.EntityModels.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Grad", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Izvjestaj", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.KomentarTeretane", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Korisnik", b =>
                {
                    b.HasOne("RS1_WebApp.EntityModels.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogID");

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID");

                    b.HasOne("RS1_Teretana.EntityModels.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Obavijest", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.OcjenaTeretane", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.PlacanjeClanarine", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID");

                    b.HasOne("RS1_Teretana.EntityModels.TipClanarine", "TipClanarine")
                        .WithMany()
                        .HasForeignKey("TipClanarineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Teretana", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trener", b =>
                {
                    b.HasOne("RS1_WebApp.EntityModels.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("NalogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.AutorizacijskiToken", b =>
                {
                    b.HasOne("RS1_WebApp.EntityModels.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.ClanObavijest", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Obavijest", "Obavijest")
                        .WithMany()
                        .HasForeignKey("ObavijestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.ClanTeretana", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.KorisnickiNalog", b =>
                {
                    b.HasOne("RS1_WebApp.EntityModels.TipNaloga", "TipNaloga")
                        .WithMany()
                        .HasForeignKey("TipNalogaID");
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.PopustKupon", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.PorukeClanova", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TrenerLicenca", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Licenca", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Trener", "Trener")
                        .WithMany()
                        .HasForeignKey("TrenerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TreningZahtjev", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_WebApp.EntityModels.Treninzi", "Treninzi")
                        .WithMany()
                        .HasForeignKey("TreninziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.Treninzi", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Trener", "Trener")
                        .WithMany()
                        .HasForeignKey("TrenerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.TreninziDetalji", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_WebApp.EntityModels.Treninzi", "Treninzi")
                        .WithMany()
                        .HasForeignKey("TreninziID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RS1_WebApp.EntityModels.Uclanjivanje", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
