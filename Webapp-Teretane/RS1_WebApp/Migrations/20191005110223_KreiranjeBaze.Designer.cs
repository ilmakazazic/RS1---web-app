// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS1_Teretana.EF;

namespace RS1_Teretana.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191005110223_KreiranjeBaze")]
    partial class KreiranjeBaze
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RS1_Teretana.EntityModels.Clan", b =>
                {
                    b.Property<int>("ClanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUclanjivanja");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.Property<string>("Prezime");

                    b.Property<int>("TeretanaID");

                    b.Property<int>("TipClanarineID");

                    b.HasKey("ClanID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("TipClanarineID");

                    b.ToTable("Clan");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Drzava", b =>
                {
                    b.Property<int>("DrzavaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("DrzavaID");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DrzavaID");

                    b.Property<string>("Naziv");

                    b.Property<string>("PostanskiBroj");

                    b.HasKey("GradID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Izvjestaj", b =>
                {
                    b.Property<int>("IzvjestajID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja");

                    b.Property<int>("KorisnikID");

                    b.Property<string>("Naziv");

                    b.Property<string>("Sadrzaj");

                    b.HasKey("IzvjestajID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Izvjestaj");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.KomentarTeretane", b =>
                {
                    b.Property<int>("KomentarID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID");

                    b.Property<string>("Komentar");

                    b.Property<int>("TeretanaID");

                    b.HasKey("KomentarID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("KomentarTeretane");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.Property<string>("Prezime");

                    b.Property<string>("Telefon");

                    b.Property<int>("TeretanaID");

                    b.Property<int>("UlogaID");

                    b.HasKey("KorisnikID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("UlogaID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Licenca", b =>
                {
                    b.Property<int>("LicencaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIsteka");

                    b.Property<DateTime>("DatumPolaganja");

                    b.Property<string>("Tip");

                    b.HasKey("LicencaID");

                    b.ToTable("Licenca");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Obavijest", b =>
                {
                    b.Property<int>("ObavijestID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumObjave");

                    b.Property<int>("KorisnikID");

                    b.Property<string>("Naziv");

                    b.Property<string>("Sadrzaj");

                    b.Property<int>("TeretanaID");

                    b.HasKey("ObavijestID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.OcjenaTeretane", b =>
                {
                    b.Property<int>("OcjenaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID");

                    b.Property<int>("Ocjena");

                    b.Property<int>("TeretanaID");

                    b.HasKey("OcjenaID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TeretanaID");

                    b.ToTable("OcjenaTeretane");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.PlacanjeClanarine", b =>
                {
                    b.Property<int>("PlacanjeClanarineID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojRacuna");

                    b.Property<int>("ClanID");

                    b.Property<DateTime>("DatumUplate");

                    b.Property<int>("KorisnikID");

                    b.Property<double>("Popust");

                    b.Property<int>("TipClanarineID");

                    b.Property<double>("UkupanIznos");

                    b.HasKey("PlacanjeClanarineID");

                    b.HasIndex("ClanID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TipClanarineID");

                    b.ToTable("PlacanjeClanarine");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Teretana", b =>
                {
                    b.Property<int>("TeretanaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<int>("GradID");

                    b.Property<string>("Naziv");

                    b.Property<TimeSpan>("RadnoVrijeme");

                    b.HasKey("TeretanaID");

                    b.HasIndex("GradID");

                    b.ToTable("Teretana");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.TipClanarine", b =>
                {
                    b.Property<int>("TipClanarineID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<string>("Tip");

                    b.HasKey("TipClanarineID");

                    b.ToTable("TipClanarine");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trener", b =>
                {
                    b.Property<int>("TrenerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<int>("LicencaID");

                    b.Property<string>("Lozinka");

                    b.Property<string>("Prezime");

                    b.Property<string>("Spol");

                    b.HasKey("TrenerID");

                    b.HasIndex("LicencaID");

                    b.ToTable("Trener");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trening", b =>
                {
                    b.Property<string>("TreningID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatumOdrzavanja");

                    b.Property<TimeSpan>("KrajTreninga");

                    b.Property<TimeSpan>("PocetakTreninga");

                    b.Property<int>("TeretanaID");

                    b.Property<int>("TrenerID");

                    b.HasKey("TreningID");

                    b.HasIndex("TeretanaID");

                    b.HasIndex("TrenerID");

                    b.ToTable("Trening");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Uloga", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Clan", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.TipClanarine", "TipClanarine")
                        .WithMany()
                        .HasForeignKey("TipClanarineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Grad", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Izvjestaj", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.KomentarTeretane", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Korisnik", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Obavijest", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.OcjenaTeretane", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.PlacanjeClanarine", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.TipClanarine", "TipClanarine")
                        .WithMany()
                        .HasForeignKey("TipClanarineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Teretana", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trener", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Licenca", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RS1_Teretana.EntityModels.Trening", b =>
                {
                    b.HasOne("RS1_Teretana.EntityModels.Teretana", "Teretana")
                        .WithMany()
                        .HasForeignKey("TeretanaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RS1_Teretana.EntityModels.Trener", "Trener")
                        .WithMany()
                        .HasForeignKey("TrenerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
